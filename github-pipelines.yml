name: Deploy Flask App to Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Increase the timeout for longer deployments

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip  # Upgrade pip to ensure smooth installations
        pip install -r requirements.txt

    - name: Archive application
      run: zip -r app.zip . -x "venv/*"  # Exclude virtual environment to reduce deployment size

    - name: Display App Service Details
      run: |
        az webapp show --name my-python-app-staging --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Clean previous deployments (optional)
      run: |
        az webapp deployment source delete --name my-python-app-staging --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }}

    - name: Retry Deploy to Azure Web App
      run: |
        for i in {1..3}; do
          echo "Attempt $i of 3"
          az webapp deployment source config-zip --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name my-python-app-staging --src app.zip
          if [ $? -eq 0 ]; then
            echo "Deployment succeeded on attempt $i"
            break
          fi
          echo "Deployment failed, retrying in 30 seconds..."
          sleep 30  # wait for 30 seconds before retrying
        done

    - name: Clean up
      run: rm -f app.zip  # Clean up the ZIP file after deployment

