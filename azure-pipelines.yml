trigger:
- main

variables:
- group: terraform_credential  # Must include: CLIENT_ID, CLIENT_SECRET, SUBSCRIPTION_ID, TENANT_ID
- name: terraformVersion
  value: '1.5.5'

pool:
  vmImage: 'ubuntu-latest'

steps:
# Install Terraform manually
- script: |
    echo "Installing Terraform $(terraformVersion)..."
    curl -LO https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
    unzip terraform_$(terraformVersion)_linux_amd64.zip
    sudo mv terraform /usr/local/bin/
    terraform -version
  displayName: 'Install Terraform'

# Login to Azure using the service connection
- task: AzureCLI@2
  inputs:
    azureSubscription: 'terraform-sc'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Logged into Azure using service connection"

# Terraform Init
- script: |
    terraform init
  displayName: 'Terraform Init'
  env:
    CLIENT_ID: $(CLIENT_ID)
    CLIENT_SECRET: $(CLIENT_SECRET)
    SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
    TENANT_ID: $(TENANT_ID)

# Terraform Plan
- script: |
    terraform plan
  displayName: 'Terraform Plan'
  env:
    CLIENT_ID: $(CLIENT_ID)
    CLIENT_SECRET: $(CLIENT_SECRET)
    SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
    TENANT_ID: $(TENANT_ID)

# Terraform Apply
- script: |
    terraform apply -auto-approve
  displayName: 'Terraform Apply'
  env:
    CLIENT_ID: $(CLIENT_ID)
    CLIENT_SECRET: $(CLIENT_SECRET)
    SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
    TENANT_ID: $(TENANT_ID)





