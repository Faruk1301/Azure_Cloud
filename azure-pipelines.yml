trigger:
- main

variables:
- group: terraform_credential  # Variable group with CLIENT_ID, CLIENT_SECRET, etc.
- name: terraformVersion
  value: '1.5.5'

pool:
  vmImage: 'ubuntu-latest'

steps:
# ✅ Install Terraform manually
- script: |
    echo "Installing Terraform..."
    curl -LO https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
    unzip terraform_$(terraformVersion)_linux_amd64.zip
    sudo mv terraform /usr/local/bin/
    terraform -version
  displayName: 'Install Terraform'

# ✅ Terraform Init
- script: |
    echo "Running terraform init..."
    
    export ARM_CLIENT_ID=$(CLIENT_ID)
    export ARM_CLIENT_SECRET=$(CLIENT_SECRET)
    export ARM_SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)
    export ARM_TENANT_ID=$(TENANT_ID)

    terraform init
  displayName: 'Terraform Init'
  env:
    CLIENT_ID: $(CLIENT_ID)
    CLIENT_SECRET: $(CLIENT_SECRET)
    SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
    TENANT_ID: $(TENANT_ID)

# ✅ Terraform Plan (fixed)
- script: |
    echo "Planning Terraform deployment..."

    export ARM_CLIENT_ID=$(CLIENT_ID)
    export ARM_CLIENT_SECRET=$(CLIENT_SECRET)
    export ARM_SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)
    export ARM_TENANT_ID=$(TENANT_ID)

    terraform plan
  displayName: 'Terraform Plan'
  env:
    CLIENT_ID: $(CLIENT_ID)
    CLIENT_SECRET: $(CLIENT_SECRET)
    SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
    TENANT_ID: $(TENANT_ID)

# ✅ Terraform Apply
- script: |
    echo "Applying Terraform changes..."

    export ARM_CLIENT_ID=$(CLIENT_ID)
    export ARM_CLIENT_SECRET=$(CLIENT_SECRET)
    export ARM_SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)
    export ARM_TENANT_ID=$(TENANT_ID)

    terraform apply -auto-approve
  displayName: 'Terraform Apply'
  env:
    CLIENT_ID: $(CLIENT_ID)
    CLIENT_SECRET: $(CLIENT_SECRET)
    SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
    TENANT_ID: $(TENANT_ID)






